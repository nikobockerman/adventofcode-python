[tool.poetry]
name = "adventofcode"
version = "0.1.0"
description = ""
authors = ["Niko BÃ¶ckerman <git.585wj@slmail.me>"]
readme = "README.md"

[tool.poe.tasks]
mypy = "mypy ."
pyright = "pyright"
ruff-check = "ruff check"
ruff-check-format = "ruff format --check"
lint = ["ruff-check", "ruff-check-format", "pyright", "mypy"]

format = "ruff format"
ruff-fix = "ruff check --fix-only"

test = "pytest"

runall = "adventofcode"
validate = ["lint", "test", "runall"]


[tool.poetry.dependencies]
python = "^3.12"
typer = "^0.12.3"
joblib = "^1.4.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.1"
pytest = "^8.3.2"
ruff = "^0.5.6"
poethepoet = "^0.27.0"
snakeviz = "^2.2.0"
tuna = "^0.5.11"
pyinstrument = "^4.6.1"
pyright = "^1.1.373"
joblib-stubs = "^1.4.2.3.20240619"

[tool.poetry.scripts]
adventofcode = "adventofcode.main:app"

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"

[tool.mypy]
python_version = "3.12"
strict_optional = true
enable_incomplete_feature = ["NewGenericSyntax"]

[tool.ruff.lint]
select = [
    "A",  # prevent using keywords that clobber python builtins
    "B",  # bugbear: security warnings
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "Q",  # flake8-quotes
    "W",  # pycodestyle warnings
    "PT",  # flake8-pytest-style
    "UP",  # alert you when better syntax is available in your python version
    "ARG",  # flake8-unused-arguments
    "ERA",  # flake8-eradicate
    "FLY",  # flynt
    "ICN",  # flake8-import-conventions
    "ISC",  # flake8-implicit-str-concat
    "PIE",  # flake8-pie
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "RET",  # flake8-return
    "RUF",  # the ruff developer's own rules
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "PERF",  # perflint
    "SLOT",  # flake8-slots
]
ignore = [
    "ISC001"
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
